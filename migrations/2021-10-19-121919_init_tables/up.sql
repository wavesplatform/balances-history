CREATE TABLE IF NOT EXISTS blocks_microblocks (
	uid BIGINT GENERATED BY DEFAULT AS IDENTITY CONSTRAINT blocks_microblocks_uid_pkey PRIMARY KEY,
	id TEXT NOT NULL,
	height INTEGER NOT NULL,
	time_stamp BIGINT NOT NULL,
    is_solidified bool not null default false
);

CREATE INDEX IF NOT EXISTS blocks_microblocks_id_idx ON blocks_microblocks (id);
CREATE INDEX IF NOT EXISTS blocks_microblocks_time_stamp_uid_idx ON blocks_microblocks (time_stamp DESC, uid DESC);
CREATE INDEX IF NOT EXISTS blocks_microblocks_is_solidified_idx ON blocks_microblocks(is_solidified) where is_solidified = false;
CREATE INDEX IF NOT EXISTS block_microblocks_timestamp_uid ON blocks_microblocks (to_timestamp(time_stamp/1000) desc, uid desc);
CREATE INDEX IF NOT EXISTS block_microblocks_uid_height ON blocks_microblocks (uid desc, height);


CREATE TABLE safe_heights (
    uid BIGINT GENERATED BY DEFAULT AS IDENTITY CONSTRAINT safe_heights_uid_pkey PRIMARY KEY,
    table_name TEXT,
    height INTEGER NOT NULL
);

CREATE UNIQUE INDEX "safe_heights_table_name_uix" ON safe_heights(table_name);

create table balance_history (
    uid BIGINT GENERATED BY DEFAULT AS IDENTITY CONSTRAINT balance_history_uid_pkey PRIMARY KEY,
    block_uid BIGINT NOT NULL CONSTRAINT balance_history_block_uid_fkey REFERENCES blocks_microblocks (uid) ON DELETE CASCADE,
    address  TEXT COLLATE "C" NOT NULL,
    asset_id TEXT COLLATE "C" NOT NULL,
    amount numeric(100)
);

CREATE INDEX IF NOT EXISTS bh_address_asset_block_uid on balance_history(address, asset_id, block_uid desc);
CREATE INDEX IF NOT EXISTS bh_block_uid on balance_history(block_uid);